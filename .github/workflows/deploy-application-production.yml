name: Deploy Application - Production
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy application:'
        required: true
        default: production
        type: choice
        options:
          - production      
      tag:
        description: 'Docker image tag to deploy'
        required: true
        default: 'latest'
permissions:
    id-token: write
    contents: read
    pull-requests: write
    packages: write

run-name: "Deploy app: ${{ inputs.environment }}"

jobs:
  build-and-deploy:
    name: "Deploy app: ${{ inputs.environment }}"    
    runs-on: ubuntu-latest
    environment: "${{ inputs.environment }}"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set GitHub Runner IP
      run: echo "GITHUB_RUNNER_IP=$(curl -s ifconfig.me)" >> $GITHUB_ENV

    - name: Azure CLI Login
      uses: azure/login@v2.2.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Enable Network Access for App Service
      uses: ./.github/actions/manage-app-service-network-access
      with:
        app-service-name: "${{ secrets.APP_SERVICE_NAME }}"
        resource-group-name: "${{ secrets.APP_RESOURCE_GROUP_NAME }}"
        github-runner-ip: ${{ env.GITHUB_RUNNER_IP }}
        enable-network-access: true

    - name: Add Inbound NSG Rule for App Service
      shell: bash
      run: |
        az network nsg rule create \
          --nsg-name "${{ secrets.NSG_NAME }}" \
          --resource-group "${{ secrets.INFRA_RESOURCE_GROUP_NAME }}" \
          --name "Allow-GitHub-Runner-IP" \
          --priority 100 \
          --direction Inbound \
          --access Allow \
          --protocol Tcp \
          --source-port-range "*" \
          --destination-port-ranges 80 443 \
          --source-address-prefix "${{ env.GITHUB_RUNNER_IP }}" \
          --destination-address-prefix "${{ secrets.SUBNET_PREFIX }}"

    - name: Log into registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3.4.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image to GHCR
      uses: docker/build-push-action@v6
      with:
        context: Childrens-Social-Care-CPD
        push: true
        tags: ghcr.io/dfe-digital/support-for-social-workers:latest
        
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ secrets.APP_SERVICE_NAME }}
        images: ghcr.io/dfe-digital/support-for-social-workers:${{ inputs.tag || 'latest' }}
        slot-name: 'staging'

    - name: Swap slot to Production
      run: |
        az webapp deployment slot swap \
          -name "${{ secrets.APP_SERVICE_NAME }}" \        
          --resource-group "${{ secrets.APP_RESOURCE_GROUP_NAME }}" \
          --slot staging \
          --target-slot production

    - name: Remove Inbound NSG Rule for App Service
      shell: bash
      run: |
        az network nsg rule delete \
          --nsg-name "${{ secrets.NSG_NAME }}" \
          --resource-group "${{ secrets.INFRA_RESOURCE_GROUP_NAME }}" \
          --name "Allow-GitHub-Runner-IP"
      
    - name: Disable Network Access for App Service
      uses: ./.github/actions/manage-app-service-network-access
      with:
        app-service-name: "${{ secrets.APP_SERVICE_NAME }}"
        resource-group-name: "${{ secrets.APP_RESOURCE_GROUP_NAME }}"
        github-runner-ip: ${{ env.GITHUB_RUNNER_IP }}
        enable-network-access: false
  