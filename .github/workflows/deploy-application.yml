name: Deploy Application
on:
  workflow_dispatch:
  # schedule:
  #   - cron: '30 7 * * 1-5'
permissions:
    id-token: write
    contents: read
    pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set GitHub Runner IP
      run: echo "GITHUB_RUNNER_IP=$(curl -s ifconfig.me)" >> $GITHUB_ENV

    - name: Load Environment Vars
      run: |
        echo "REGISTRY=${{ vars.REGISTRY }}" >> $GITHUB_ENV
        echo "IMAGE_NAME=${{ vars.IMAGE_NAME }}" >> $GITHUB_ENV

    - name: Set SHA and Release Tag
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "RELEASE_TAG=$(git describe --tags --always)" >> $GITHUB_ENV

    - name: Azure CLI Login
      uses: azure/login@v2.2.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Enable Network Access for ACR
      uses: ./.github/actions/manage-acr-network-access
      with:
        acr-name: "${{ secrets.REGISTRY_NAME }}"
        resource-group-name: "${{ secrets.APP_RESOURCE_GROUP_NAME }}"
        enable-network-access: true

    - name: Enable Network Access for App Service
      uses: ./.github/actions/manage-app-service-network-access
      with:
        app-service-name: "${{ secrets.APP_SERVICE_NAME }}"
        resource-group-name: "${{ secrets.APP_RESOURCE_GROUP_NAME }}"
        github-runner-ip: ${{ env.GITHUB_RUNNER_IP }}
        enable-network-access: true

    - name: Add Inbound NSG Rule for App Service
      shell: bash
      run: |
        az network nsg rule create \
          --nsg-name "${{ secrets.NSG_NAME }}" \
          --resource-group "${{ secrets.INFRA_RESOURCE_GROUP_NAME }}" \
          --name "Allow-GitHub-Runner-IP" \
          --priority 100 \
          --direction Inbound \
          --access Allow \
          --protocol Tcp \
          --source-port-range "*" \
          --destination-port-ranges 80 443 \
          --source-address-prefix "${{ env.GITHUB_RUNNER_IP }}" \
          --destination-address-prefix "${{ secrets.SUBNET_PREFIX }}"

    - name: Log in to ACR
      run: |
        az acr login --name ${{ secrets.REGISTRY_NAME }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container

    - name: Sleep 1m
      shell: bash
      run: |
        sleep 60

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
      with:
        context: Childrens-Social-Care-CPD
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_TAG }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        build-args: |
          VCSREF=${{ github.sha }}
          VCSTAG=${{ env.RELEASE_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.APP_SERVICE_NAME }}
        images: ${{ env.IMAGE_NAME }}
  

    # - name: Enable Continuous Deployment
    #   shell: bash    
    #   run: |
    #     echo "Enabling Continuous Deployment..."
    #     az webapp deployment container config --enable-cd true --name ${{ secrets.APP_SERVICE_NAME }} --resource-group ${{ secrets.APP_RESOURCE_GROUP_NAME }}

    # - name: Sleep 1m
    #   shell: bash
    #   run: |
    #     sleep 60

    # - name: Disable Continuous Deployment
    #   shell: bash    
    #   run: |        
    #     echo "Disabling Continuous Deployment..."
    #     az webapp deployment container config --enable-cd false --name ${{ secrets.APP_SERVICE_NAME }} --resource-group ${{ secrets.APP_RESOURCE_GROUP_NAME }}        

    # - name: Restart App Service
    #   shell: bash
    #   run: |
    #     az webapp restart --name ${{ secrets.APP_SERVICE_NAME }} --resource-group ${{ secrets.APP_RESOURCE_GROUP_NAME }}

    - name: Sleep 2m
      shell: bash
      run: |
        sleep 120

    - name: az webapp config container set
      shell: bash
      run: |
        az webapp config container set \
          --name ${{ secrets.APP_SERVICE_NAME }} \
          --resource-group ${{ secrets.APP_RESOURCE_GROUP_NAME }} \
          --docker-custom-image-name ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    - name: Disable Network Access for ACR
      uses: ./.github/actions/manage-acr-network-access
      with:
        acr-name: "${{ secrets.REGISTRY_NAME }}"
        resource-group-name: "${{ secrets.APP_RESOURCE_GROUP_NAME }}"
        github-runner-ip: ${{ env.GITHUB_RUNNER_IP }}
        enable-network-access: false

    - name: Remove Inbound NSG Rule for App Service
      shell: bash
      run: |
        az network nsg rule delete \
          --nsg-name "${{ secrets.NSG_NAME }}" \
          --resource-group "${{ secrets.INFRA_RESOURCE_GROUP_NAME }}" \
          --name "Allow-GitHub-Runner-IP"
      
    - name: Disable Network Access for App Service
      uses: ./.github/actions/manage-app-service-network-access
      with:
        app-service-name: "${{ secrets.APP_SERVICE_NAME }}"
        resource-group-name: "${{ secrets.APP_RESOURCE_GROUP_NAME }}"
        github-runner-ip: ${{ env.GITHUB_RUNNER_IP }}
        enable-network-access: false
  