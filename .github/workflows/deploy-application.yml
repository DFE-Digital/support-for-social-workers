name: Deploy Application
on:
  workflow_dispatch:
  schedule:
    - cron: '30 7 * * 1-5'
permissions:
    id-token: write
    contents: read
    pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Echo GitHub Runner IP
      run: |
        GITHUB_RUNNER_IP=$(curl -s https://ifconfig.me)
        echo "GITHUB_RUNNER_IP=$GITHUB_RUNNER_IP" >> $GITHUB_ENV
        echo "GitHub Runner IP: $GITHUB_RUNNER_IP"

    - name: Set SHA and Release Tag
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "RELEASE_TAG=$(git describe --tags --always)" >> $GITHUB_ENV
        echo "IMAGE_TAGS=${{ secrets.IMAGE_NAME }}" >> $GITHUB_ENV

    - name: Azure CLI Login
      uses: azure/login@v2.2.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Enable Network Access for ACR
      uses: ./.github/actions/manage-acr-network-access
      with:
        acr-name: "${{ secrets.REGISTRY_NAME }}"
        resource-group-name: "${{ secrets.APP_RESOURCE_GROUP_NAME }}"
        github-runner-ip: ${{ env.GITHUB_RUNNER_IP }}
        enable-network-access: true

    - name: Log in to ACR
      run: |
        az acr login --name ${{ secrets.REGISTRY_NAME }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
      with:
        context: Childrens-Social-Care-CPD
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ secrets.IMAGE_NAME }}
        build-args: |
          VCSREF=${{ env.sha_short }}
          VCSTAG=${{ env.RELEASE_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Enable Network Access for App Service
      uses: ./.github/actions/manage-app-service-network-access
      with:
        app-service-name: "${{ secrets.APP_SERVICE_NAME }}"
        resource-group-name: "${{ secrets.APP_RESOURCE_GROUP_NAME }}"
        github-runner-ip: ${{ env.GITHUB_RUNNER_IP }}
        enable-network-access: true

    - name: Add Inbound NSG Rule for App Service
      shell: bash
      run: |
        az network nsg rule create \
          --nsg-name "${{ secrets.NSG_NAME }}" \
          --resource-group "${{ secrets.INFRA_RESOURCE_GROUP_NAME }}" \
          --name "Allow-GitHub-Runner-IP" \
          --priority 100 \
          --direction Inbound \
          --access Allow \
          --protocol Tcp \
          --source-port-range "*" \
          --destination-port-ranges 80 443 \
          --source-address-prefix "${{ env.GITHUB_RUNNER_IP }}" \
          --destination-address-prefix "${{ secrets.SUBNET_PREFIX }}"
      
    - name: Sleep 40s
      shell: bash
      run: |
        sleep 40

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.APP_SERVICE_NAME }}
        images: ${{ env.IMAGE_TAGS }}

    - name: Sleep 60s
      shell: bash
      run: |
        sleep 60
  
    - name: Disable Network Access for ACR
      uses: ./.github/actions/manage-acr-network-access
      with:
        acr-name: "${{ secrets.REGISTRY_NAME }}"
        resource-group-name: "${{ secrets.APP_RESOURCE_GROUP_NAME }}"
        github-runner-ip: ${{ env.GITHUB_RUNNER_IP }}
        enable-network-access: false

    - name: Remove Inbound NSG Rule for App Service
      shell: bash
      run: |
        az network nsg rule delete \
          --nsg-name "${{ secrets.NSG_NAME }}" \
          --resource-group "${{ secrets.INFRA_RESOURCE_GROUP_NAME }}" \
          --name "Allow-GitHub-Runner-IP"
      
    - name: Disable Network Access for App Service
      uses: ./.github/actions/manage-app-service-network-access
      with:
        app-service-name: "${{ secrets.APP_SERVICE_NAME }}"
        resource-group-name: "${{ secrets.APP_RESOURCE_GROUP_NAME }}"
        github-runner-ip: ${{ env.GITHUB_RUNNER_IP }}
        enable-network-access: false
  